"use client";

import React, { useState } from "react";
import { Button } from "@/components/ui";
import { cn } from "@/shared/lib/utils";
import { useFloating, shift, offset, flip, autoUpdate } from "@floating-ui/react";



{/* 
  üìå useFloating:
  –≠—Ç–æ —Ö—É–∫ –∏–∑ @floating-ui/react, –∫–æ—Ç–æ—Ä—ã–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –ø–æ–∑–∏—Ü–∏—é –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –º–µ–Ω—é).
  –û–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Å—ã–ª–∫–∏ (refs) –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º –∏ —Å—Ç–∏–ª–∏ (floatingStyles) –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.

  üîπ shift:
  - –≠—Ç–æ—Ç middleware –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –≤—ã—Ö–æ–¥ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∏–ª–∏ —ç–∫—Ä–∞–Ω–∞.
  - –ï—Å–ª–∏ –º–µ–Ω—é —É–ø–∏—Ä–∞–µ—Ç—Å—è –≤ –∫—Ä–∞–π —ç–∫—Ä–∞–Ω–∞, shift –µ–≥–æ —Å–¥–≤–∏–≥–∞–µ—Ç —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–æ –æ—Å—Ç–∞–≤–∞–ª–æ—Å—å –≤–∏–¥–∏–º—ã–º.

  üîπ offset:
  - –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –∫–Ω–æ–ø–∫–æ–π –∏ –≤—Å–ø–ª—ã–≤–∞—é—â–∏–º –º–µ–Ω—é.
  - –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ offset(5) –¥–æ–±–∞–≤–ª—è–µ—Ç 5px –æ—Ç—Å—Ç—É–ø–∞ –æ—Ç –∫–Ω–æ–ø–∫–∏.

  üîπ flip:
  - –ï—Å–ª–∏ –º–µ–Ω—é –Ω–µ –ø–æ–º–µ—â–∞–µ—Ç—Å—è —Å–Ω–∏–∑—É, –æ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–≤–µ—Ä–Ω–µ—Ç—Å—è –≤–≤–µ—Ä—Ö.
  - –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –±–ª–∏–∑–∫–æ –∫ –Ω–∏–∂–Ω–µ–º—É –∫—Ä–∞—é —ç–∫—Ä–∞–Ω–∞, flip –ø–æ–¥–Ω–∏–º–µ—Ç –º–µ–Ω—é –Ω–∞–¥ –Ω–µ–π.

  üîπ autoUpdate:
  - –°–ª–µ–¥–∏—Ç –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –ø–æ–∑–∏—Ü–∏–∏ –∫–Ω–æ–ø–∫–∏, —Ä–∞–∑–º–µ—Ä–∞–º–∏ –æ–∫–Ω–∞ –∏ —Å–∫—Ä–æ–ª–ª–æ–º.
  - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å.
*/} 


interface Props {
  className?: string;
}

export const PopupMenuv2: React.FC<Props> = ({ className }) => {
  const [isOpen, setIsOpen] = useState(false);

  // useFloating –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –ø–æ–∑–∏—Ü–∏—é –º–µ–Ω—é
  const { refs, floatingStyles } = useFloating({
    placement: "bottom-start", // –ú–µ–Ω—é –ø–æ—è–≤–∏—Ç—Å—è –ø–æ–¥ –∫–Ω–æ–ø–∫–æ–π (—Å–ª–µ–≤–∞)
    middleware: [offset(5), flip(), shift()], // –î–æ–±–∞–≤–ª—è–µ–º —Å–º–µ—â–µ–Ω–∏–µ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –ø–æ–¥—Å—Ç—Ä–æ–π–∫—É
    whileElementsMounted: autoUpdate, 
  });

  return (
    <div className={cn("flex flex-col justify-center items-center p-10 gap-10" , className)}>
    <Button ref={refs.setReference} onClick={() => isOpen? setIsOpen(false) : setIsOpen(true)}>
        Button
    </Button>

      {isOpen && (
        <div
          ref={refs.setFloating}
          style={floatingStyles}
          className="absolute bg-white shadow-lg border rounded-md p-2 w-40"
        >
          <ul className="space-y-2">
            <li className="p-2 hover:bg-gray-100 cursor-pointer">Item 1</li>
            <li className="p-2 hover:bg-gray-100 cursor-pointer">Item 2</li>
            <li className="p-2 hover:bg-gray-100 cursor-pointer">Item 3</li>
          </ul>
        </div>
      )}

    </div>

    
  );
};